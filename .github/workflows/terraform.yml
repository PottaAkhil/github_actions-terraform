name: Terraform Deploy

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  vpc:
    runs-on: ubuntu-latest
    # Run only if files in vpc/ changed
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    steps:
      - name: Check changed files
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            vpc:
              - 'vpc/**'

      - name: Checkout repository
        if: steps.changes.outputs.vpc == 'true'
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        if: steps.changes.outputs.vpc == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: us-east-1

      - name: Setup Terraform
        if: steps.changes.outputs.vpc == 'true'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Terraform Init
        if: steps.changes.outputs.vpc == 'true'
        working-directory: ./vpc
        run: terraform init

      - name: Terraform Plan
        if: steps.changes.outputs.vpc == 'true'
        working-directory: ./vpc
        run: terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && steps.changes.outputs.vpc == 'true'
        working-directory: ./vpc
        run: terraform apply -input=false -var-file=terraform.tfvars -auto-approve

  sg:
    runs-on: ubuntu-latest
    # Run only if files in sg/ changed
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    steps:
      - name: Check changed files
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            sg:
              - 'sg/**'

      - name: Checkout repository
        if: steps.changes.outputs.sg == 'true'
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        if: steps.changes.outputs.sg == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: us-east-1

      - name: Setup Terraform
        if: steps.changes.outputs.sg == 'true'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Terraform Init
        if: steps.changes.outputs.sg == 'true'
        working-directory: ./sg
        run: terraform init

      - name: Terraform Plan
        if: steps.changes.outputs.sg == 'true'
        working-directory: ./sg
        run: terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && steps.changes.outputs.sg == 'true'
        working-directory: ./sg
        run: terraform apply -input=false -var-file=terraform.tfvars -auto-approve
