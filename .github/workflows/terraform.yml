name: Terraform Deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  vpc:
    runs-on: [self-hosted, aws-githubactions-runner]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: changes changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            vpc:
              - 'vpc/**'

      - name: Setup SSH for AWS
        if: ${{ steps.changes.outputs.vpc == 'true' }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PEM_KEY }}" > ~/.ssh/aws.pem
          chmod 600 ~/.ssh/aws.pem

      - name: Terraform Init
        if: ${{ steps.changes.outputs.vpc == 'true' }}
        working-directory: ./vpc
        run: terraform init

      - name: Terraform Format
        if: ${{ steps.changes.outputs.vpc == 'true' }}
        working-directory: ./vpc
        run: terraform fmt -recursive

      - name: Terraform Validate
        if: ${{ steps.changes.outputs.vpc == 'true' }}
        working-directory: ./vpc
        run: terraform validate

      - name: Terraform Plan
        if: ${{ steps.changes.outputs.vpc == 'true' }}
        working-directory: ./vpc
        run: terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform Apply
        if: ${{ github.ref == 'refs/heads/main' && steps.changes.outputs.vpc == 'true' }}
        working-directory: ./vpc
        run: terraform apply -input=false -var-file=terraform.tfvars -auto-approve

  sg:
    runs-on: [self-hosted, aws-githubactions-runner]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: changes changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            sg:
              - 'sg/**'

      - name: Setup SSH for AWS
        if: ${{ steps.changes.outputs.sg == 'true' }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PEM_KEY }}" > ~/.ssh/aws.pem
          chmod 600 ~/.ssh/aws.pem

      - name: Terraform Init
        if: ${{ steps.changes.outputs.sg == 'true' }}
        working-directory: ./sg
        run: terraform init

      - name: Terraform Format
        if: ${{ steps.changes.outputs.sg == 'true' }}
        working-directory: ./sg
        run: terraform fmt -recursive

      - name: Terraform Validate
        if: ${{ steps.changes.outputs.sg == 'true' }}
        working-directory: ./sg
        run: terraform validate

      - name: Terraform Plan
        if: ${{ steps.changes.outputs.sg == 'true' }}
        working-directory: ./sg
        run: terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform Apply
        if: ${{ github.ref == 'refs/heads/main' && steps.changes.outputs.sg == 'true' }}
        working-directory: ./sg
        run: terraform apply -input=false -var-file=terraform.tfvars -auto-approve

  ec2:
    runs-on: [self-hosted, aws-githubactions-runner]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: changes changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ec2:
              - 'ec2/**'

      - name: Setup SSH for AWS
        if: ${{ steps.changes.outputs.ec2 == 'true' }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PEM_KEY }}" > ~/.ssh/aws.pem
          chmod 600 ~/.ssh/aws.pem

      - name: Terraform Init
        if: ${{ steps.changes.outputs.ec2 == 'true' }}
        working-directory: ./ec2
        run: terraform init

      - name: Terraform Format
        if: ${{ steps.changes.outputs.ec2 == 'true' }}
        working-directory: ./ec2
        run: terraform fmt -recursive

      - name: Terraform Validate
        if: ${{ steps.changes.outputs.ec2 == 'true' }}
        working-directory: ./ec2
        run: terraform validate

      - name: Terraform Plan
        if: ${{ steps.changes.outputs.ec2 == 'true' }}
        working-directory: ./ec2
        run: terraform plan -input=false -var-file=terraform.tfvars

      - name: Terraform Apply
        if: ${{ github.ref == 'refs/heads/main' && steps.changes.outputs.ec2 == 'true' }}
        working-directory: ./ec2
        run: terraform apply -input=false -var-file=terraform.tfvars -auto-approve
